---
title: "**Dogwood**"
description: "Tree ID: 191"
image: "all_tree_images/not_available.png"
---

<br>

## **More Information**
::: column-margin
<center><a class="button" href="https://forms.gle/W6f5nwYxrM33hF4f7">Notice a Mistake?</a></center>
:::


Date Recorded:  10/25/2022

Diameter at Breast Height:  0.5  inches

Planters:  Unknown

## **i-Tree Eco Estimates**


 Replacement Value: $54.75

 Carbon Storage:  0.5  lbs

 Gross Carbon Removal:  0.4  lbs/year

 Avoided Runoff:  0.4  ft<sup>3</sup>/year

 Air Pollution Removal:  0.2  oz/year

## **Location**

Latitude, Longitude: 41.9877764383871, -91.6590948047922

```{r}
#| error: false
#| echo: false
#| message: false
#| warning: false
my_tree <- '191'
# Importing packages
library(tidyverse)
library(sf)
library(tmap)
library(leaflet)
library(leaflet.extras)

# Remove scientific notation
options(scipen = 999)

#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
## Formatting Set Up -----------------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

tree_shp <- st_read("all_tree_images/coe_tree_archive.shp", quiet = TRUE) 

# Formatting the names of planters
format_names <- function(x){
  if(is.na(x)){
    output = "Unknown"
  } else {
    output = str_replace_all(x, pattern = ", ", replacement="<br>")
    output = paste("<br>", output, sep="")
  }
  return(output)
}

# Setting up the tree icons
treeIcons <- iconList(
  Oak = makeIcon(
    iconUrl = "all_tree_images/tree_icons/oak.png",
    iconWidth = 25, iconHeight = 50
  ),
  Maple = makeIcon(
    iconUrl = "all_tree_images/tree_icons/maple.png",
    iconWidth = 25, iconHeight = 50
  ),
  `Honey Locust` = makeIcon(
    iconUrl = "all_tree_images/tree_icons/honeylocust.png",
    iconWidth = 25, iconHeight = 50
  ),
  Elm = makeIcon(
    iconUrl = "all_tree_images/tree_icons/elm.png",
    iconWidth = 25, iconHeight = 50
  ),
  Ash = makeIcon(
    iconUrl = "all_tree_images/tree_icons/ash.png",
    iconWidth = 25, iconHeight = 50
  ),
  Evergreen = makeIcon(
    iconUrl = "all_tree_images/tree_icons/evergreen.png",
    iconWidth = 25, iconHeight = 50
  ),
  Crabapple = makeIcon(
    iconUrl = "all_tree_images/tree_icons/crabapple.png",
    iconWidth = 25, iconHeight = 50
  ),
  Other = makeIcon(
    iconUrl = "all_tree_images/tree_icons/other.png",
    iconWidth = 25, iconHeight = 50
  )
)

# Processing

tree_shp  <- tree_shp %>% 
  rowwise %>% 
  mutate(
    formatted_names = format_names(planters),
    ID = str_pad(ID, width = 3, side="left", pad="0")
  )

#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# The Map ----------------------------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

mini_map <- tree_shp %>% filter(ID == my_tree)
my_coords <- st_coordinates(mini_map)

leaflet(mini_map, 
        options = leafletOptions(minZoom = 15, maxZoom = 20, maxNativeZoom=20)) %>%
  addMarkers(
    icon = ~treeIcons[tree_grp], 
    popup = ~paste(
      '<h3>',species,"</h3>",
      "<hr> </hr>",
      "<table>
        <tr>
        <th>Tree ID#:</th>
        <th>", ID, "</th>
        </tr>",
      "<tr>
        <td>Diameter:</td>
        <td>", dbh, "in.</td>
        </tr>",
      "<tr>
        <td>Carbon Sequestration: &nbsp; &nbsp; &nbsp;</td>
        <td>", c_stor_1, "lbs</td>
        </tr>",
      "<tr>
        <td>Avoided Runoff:</td>
        <td>", runoff_1, "ft.<sup>3</sup>/yr</td>
        </tr>",
      "<tr>
        <td>Air Pollution Removal:</td>
        <td>", poll_1, "oz/yr</td>
        </tr>",
      "<tr>
        <td>Planted By:</td>
        <td>", formatted_names, "</td>
        </tr>",
      "</table>"
    )
  ) %>% 
  addResetMapButton() %>%
  addFullscreenControl()%>% 
  addProviderTiles(providers$OpenStreetMap.France) %>% 
  setView(lat = my_coords[2], lng = my_coords[1], zoom = 18)

```

## **Images**

No images available at this time.
