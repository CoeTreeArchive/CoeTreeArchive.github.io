---
title: "**The Thickest Trees Around**"
description: "*Explore the distribution of tree trunk diameters on campus.*"
image: "../../images/figure-previews/tree-diameter.png"
---

```{r, results = 'hide'}
#| error: false
#| echo: false
#| message: false
#| warning: false

#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
## Set-Up ----------------------------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

# All packages needed
my_packages <- c(
  'tidyverse',
  'openxlsx',
  'plotly',
  'leaflet',
  'leaflet.extras',
  'sf'
)

# Install any packages not already installed
new_packages <- my_packages[!(my_packages %in% installed.packages()[,"Package"])]
if(length(new_packages)){
  install.packages(new_packages)
}

# Library all packages
lapply(my_packages, library, character.only = TRUE)

# Reduce scientific notation
options(scipen = 9)

# Remove unnecessary objects
rm(new_packages, my_packages)

#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
```

```{r}
#| error: false
#| echo: false
#| message: false
#| warning: false

df <- read.xlsx('../../data/coe-tree-archive-all-years.xlsx')

df <- df %>% 
  rowwise() %>% 
  mutate(
    Species.Group = case_when(
      Identification == "Unidentified" ~ "Other",
      T ~ Species.Group
    )
  )

df_list <- split(df, df$Species.Group)

fig1 <- plot_ly() %>% 
  add_trace(type = "histogram", x = df_list[[8]]$`DBH.(in)`, 
            name = unique(df_list[[8]]$Species.Group), 
            marker = list(color = "rgb(137, 176, 76)")) %>%
  add_trace(type = "histogram", x = df_list[[7]]$`DBH.(in)`, 
            name = unique(df_list[[7]]$Species.Group), 
            marker = list(color = "rgb(194, 208, 94)")) %>%
  add_trace(type = "histogram", x = df_list[[6]]$`DBH.(in)`, 
            name = unique(df_list[[6]]$Species.Group), 
            marker = list(color = "rgb(251, 240, 112)")) %>%
  add_trace(type = "histogram", x = df_list[[5]]$`DBH.(in)`, 
            name = unique(df_list[[5]]$Species.Group), 
            marker = list(color = "rgb(212, 199, 145)")) %>%
  add_trace(type = "histogram", x = df_list[[4]]$`DBH.(in)`, 
            name = unique(df_list[[4]]$Species.Group), 
            marker = list(color = "rgb(179, 107, 107)")) %>%
  add_trace(type = "histogram", x = df_list[[3]]$`DBH.(in)`, 
            name = unique(df_list[[3]]$Species.Group), 
            marker = list(color = "rgb(166, 159, 181)")) %>%
  add_trace(type = "histogram", x = df_list[[2]]$`DBH.(in)`, 
            name = unique(df_list[[2]]$Species.Group), 
            marker = list(color = "rgb(95, 154, 145)")) %>%
  add_trace(type = "histogram", x = df_list[[1]]$`DBH.(in)`, 
            name = unique(df_list[[1]]$Species.Group), 
            marker = list(color = "rgb(58, 65, 60)")) %>%
  layout(barmode="stack", bargap=0.05, 
         title = "Distribution of Tree Diameters",
         xaxis = list(title = "Diameter at Breast Height (in)", 
                      zeroline = FALSE),
         yaxis = list(title = "Number of Trees", zeroline = FALSE))

# The map portion

tree_shp <- read.xlsx("../../data/coe-tree-archive-all-years.xlsx", detectDates = T) 

# Formatting the names of planters
format_names <- function(x){
  if(is.na(x)){
    output = "Unknown"
  } else {
    output = str_replace_all(x, pattern = ", ", replacement="<br>")
    output = paste("<br>", output, sep="")
  }
  return(output)
}

# Processing
tree_shp  <- tree_shp %>% 
  rowwise %>% 
  mutate(
    formatted_names = format_names(Planters),
    Name = ifelse(is.na(Name), 'Unnamed', Name),
    my_url = paste(
      "https://coetreearchive.github.io/tree-profiles/tree_", Tree.ID, ".html", 
      sep="")
  )

#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# The Map ----------------------------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

tree_shp <- st_as_sf(tree_shp, coords = c('Longitude','Latitude'), 
                     crs = 'WGS84')

tree_shp <- tree_shp %>% 
  rowwise() %>% 
  mutate(fakeDBH = max(`DBH.(in)`, 12)/3)

fig2 <- leaflet(tree_shp, 
        options = leafletOptions(minZoom = 15, maxZoom = 20, maxNativeZoom=20)) %>%
  addCircleMarkers(
    radius = ~fakeDBH,
    color = "#873e23",
    stroke = FALSE, 
    fillOpacity = 0.7,
        popup = ~paste(
      "<h3>", Identification, "</h3>",
      "<hr> </hr>",
      "<table>
        <tr>
        <th>Tree ID#:</th>
        <th>", Tree.ID, "</th>
        </tr>",
      "<tr>
        <td>Name:</td>
        <td>", Name, "</td>
        </tr>",
      "<tr>
        <td>Diameter (in):</td>
        <td>", `DBH.(in)`, "</td>
        </tr>",
      "<tr>
        <td>Carbon Storage (lbs):</td>
        <td>", `Carbon.Storage.(lb)`, "</td>
        </tr>",
      "<tr>
        <td>Avoided Runoff (gal/year):</td>
        <td>", `Avoided.Runoff.(gal/yr)`, "</td>
        </tr>",
      "<tr>
        <td>Pollution Removal (oz/year):</td>
        <td>", `Pollution.Removal.(oz/yr)`, "</td>
        </tr>",
      "<tr>
        <td>Planted By:</td>
        <td>", formatted_names, "</td>
        </tr>",
      "</table>",
      "<a href=", my_url, ">More About This Tree</a>"
    )
  ) %>%
  addResetMapButton() %>%
  addFullscreenControl()%>% 
  addProviderTiles(providers$OpenStreetMap.France)


```

```{r}
#| echo: false
fig1
```

```{r}
#| echo: false
fig2
```

## Top 10 Thickest Trees

```{r}
#| error: false
#| echo: false
#| message: false
#| warning: false
#| tbl-colwidths: [10, 15, 30, 30, 15]

library(kableExtra)

temp <- df[order(-df$`DBH.(in)`),]
temp <- temp[1:10,]

temp$dt_url <- paste('https://coetreearchive.github.io/tree-profiles/tree_',
  temp$`Tree.ID`, '.html', sep = "")

temp <- temp %>% 
  mutate(
    `Tree ID` = cell_spec(`Tree.ID`, "html", link = dt_url),
    `Tree Name` = ifelse(is.na(Name), "", Name)
  )

temp$`DBH Rank` <- as.character(1:nrow(temp))

temp <- temp[c("DBH Rank", "Tree ID", "Tree Name", "Identification", "DBH.(in)")]
colnames(temp) <- c("DBH Rank", "Tree ID #", "Tree Name", "Species", "DBH (in)")

temp %>%
  kable("html", escape = FALSE, align = c('c', 'c', 'l', 'l', 'c')) %>%
  kable_styling(bootstrap_options = c("hover", "condensed"))
 
```
